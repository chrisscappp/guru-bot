const TelegramApi = require('node-telegram-bot-api')
const token = "5703464504:AAGpcBDq2pKeB7D0arq5JbSk9Qqh3v5yR8o"

const SECRET_TOKEN = "4472656^###$@kjkUpipKlkhR//wqerWQWQ"
const SHANYA = "env_dode--3/44/wwytycvvig--NPM"

const bot = new TelegramApi(token, {polling: true})

const { palekhovaOptions, palekhovaTheory, palekhovaCodeExamples } = require('./palekhova')
const { rakovaOptions, rakovaTheory } = require('./rakova')

const selectItemText = `–í—ã–±–µ—Ä–∏ –ø—Ä–µ–¥–º–µ—Ç –∏–∑ —Å–ø–∏—Å–∫–∞ üòâ`
const questNumberText = `–í—ã–±–µ—Ä–∏ –Ω–æ–º–µ—Ä –≤–æ–ø—Ä–æ—Å–∞ üòâ`
const sectionsText = `–í—ã–±–µ—Ä–∏ —Ä–∞–∑–¥–µ–ª –∏–∑ —Å–ø–∏—Å–∫–∞ üòâ`

const lessonsOptions = {
    reply_markup: JSON.stringify({
        inline_keyboard: [
            [{text: '–û—Å–Ω–æ–≤—ã –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è', callback_data: 'palekhova'}],
            [{text: '–í–≤–µ–¥–µ–Ω–∏–µ –≤ it', callback_data: 'rakova'}],
        ]
    })
}

const start = () => {
    bot.setMyCommands([
        {command: '/start', description: '–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ'},
        {command: '/info', description: '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è'},
        {command: '/otvet', description: '–û—Ç–≤–µ—Ç—ã'},
    ])
    
    bot.on('message', async msg => {
        const text = msg.text;
        const chatId = msg.chat.id;
        switch (text) {
            case '/start':
                await bot.sendMessage(chatId, `–ü—Ä–∏–≤–µ—Ç, ${msg.from.first_name}! –≠—Ç–æ –≥—É—Ä—É-–±–æ—Ç. –Ø –±—É–¥—É –ø–æ–º–æ–≥–∞—Ç—å —Ç–µ–±–µ –Ω–∞ —ç–∫–∑–∞–º–µ–Ω–∞—Ö –∏ –≤ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–µ –∫ –Ω–∏–º! üôÇ`)
                return bot.sendMessage(chatId, `–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç—ã, –∫–ª–∏–∫–Ω–∏ /otvet. –ò–ª–∏ –≤—ã–±–µ—Ä–∏ —ç—Ç–æ—Ç —Ä–∞–∑–¥–µ–ª –≤ –º–µ–Ω—é :)`)
                break;
            case '/info':
                await bot.sendMessage(chatId, `${msg.from.first_name}, –Ω–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞ —Å–¥–µ–ª–∞–ª–∞ –º–µ–Ω—è - –±–æ—Ç–∞ - –¥–ª—è –Ω–∞—Ä–æ–¥–∞! üôÉ`)
                await bot.sendMessage(chatId, `–Ø –º–æ–≥—É –¥–∞—Ç—å –æ—Ç–≤–µ—Ç –Ω–∞ —ç–∫–∑–∞–º–µ–Ω–∞—Ü–∏–æ–Ω–Ω—ã–π –≤–æ–ø—Ä–æ—Å, –Ω–æ –ø–æ–∫–∞ —á—Ç–æ –ø–æ –¥–≤—É–º –ø—Ä–µ–¥–º–µ—Ç–∞–º: –û—Å–Ω–æ–≤—ã –ø—Ä–æ–≥–∏ –∏ –í–≤–µ–¥–µ–Ω–∏–µ –≤ IT!`)
                await bot.sendMessage(chatId, `–ü–æ–ª—å–∑—É–π—Å—è —Å —É–º–æ–º –∏ –Ω–∞ –∑–¥–æ—Ä–æ–≤—å–µ! ‚ù§`)  
                await bot.sendMessage(chatId, `–ö—Å—Ç–∞—Ç–∏, –ø–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –Ω–∞—à —Ç–µ–ª–µ–≥—Ä–∞–º –∫–∞–Ω–∞–ª! –¢–∞–º –ø—É–±–ª–∏–∫—É–µ–º –Ω–æ–≤–æ—Å—Ç–∏ –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è! https://t.me/shporabot229`)
                return bot.sendMessage(chatId, `–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Å—Ç–∞–≤–ª—è–π –≤ –∫–∞–Ω–∞–ª–µ –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å, –Ω–∞–º –≤–∞–∂–Ω–æ –∑–Ω–∞—Ç—å, —á—Ç–æ –º–æ–∂–Ω–æ –∏ –Ω—É–∂–Ω–æ —É–ª—É—á—à–∏—Ç—å! üôè`)
                break;
            case '/otvet':
                return bot.sendMessage(chatId, selectItemText, lessonsOptions)
                break;
            case SHANYA:
                await bot.sendMessage(chatId, '–ù–∞—á–∏–Ω–∞—é —à–µ—Ä—Å—Ç–∏—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö...')
                await bot.sendDocument(chatId, './img/rakova/super/rakovaSecert228.docx')
                return bot.sendMessage(chatId, '–í–æ—Ç –µ—â—ë —Ñ–∞–π–ª–∏–∫ –¥–ª—è –í–≤–µ–¥–µ–Ω–∏—è –≤ IT! ‚ù§')
                break;
            case '—Ö—É–π':
                return bot.sendMessage(chatId, '—Å–∞–º —Ö—É–π')
                break;
            case '–•—É–π':
                return bot.sendMessage(chatId, '—Å–∞–º —Ö—É–π')
                break;
            case SECRET_TOKEN:
                for (i = 1; i < 10; i++) {
                    await bot.sendPhoto(chatId, `./img/rakova/super/rakovaSuper0${i}.jpg`)
                }
                await bot.sendPhoto(chatId, `./img/rakova/super/rakovaSuper10.jpg`)
                return bot.sendMessage(chatId, `–í—ã—Å—ã–ª–∞—é —Å–µ–∫—Ä–µ—Ç–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –ø–æ –í–≤–µ–¥–µ–Ω–∏—é –≤ IT... ü§´`)
                break;
            default:
                return bot.sendMessage(chatId, '–Ø —Ç–µ–±—è –Ω–µ –ø–æ–Ω–∏–º–∞—é, –ø–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑!)')
        }
    })

    bot.on('callback_query', async msg => {
        const data = msg.data;
        const chatId = msg.message.chat.id;
        if (data === 'palekhova') {
            return bot.sendMessage(chatId, sectionsText, palekhovaOptions)
        }
        if (data === 'rakova') {
            return bot.sendMessage(chatId, sectionsText, rakovaOptions)
        }
        if (data === 'theoryProga') {
            return bot.sendMessage(chatId, questNumberText, palekhovaTheory)
        }
        if (data === 'code_examples') {
            return bot.sendMessage(chatId, `–í—ã–±–µ—Ä–∏ –Ω—É–∂–Ω—ã–π –∫—É—Å–æ–∫ –∫–æ–¥–∞ üòâ`, palekhovaCodeExamples) 
        }
        if (data === 'theoryIt') {
            return bot.sendMessage(chatId, questNumberText, rakovaTheory)
        }
    })

    bot.on('callback_query', async msg => {
        const data = msg.data;
        const chatId = msg.message.chat.id;
        console.log(data);
        if (data === 'palekhovaSections') {
            return bot.sendMessage(chatId, selectItemText, palekhovaOptions)
        }
        if (data === 'home') {
            return bot.sendMessage(chatId, selectItemText, lessonsOptions)
        }
        if (data.slice(0, -2) === 'palekhovaQuestions') {
            await bot.sendPhoto(chatId, `./img/palekhova/questions/${data}.jpg`)
            if (data === 'palekhovaQuestions05') {
                return bot.sendPhoto(chatId, `./img/palekhova/questions/${data}Dop.jpg`)
            } else {
                return
            }
        }
        if (data.slice(0, -2) === 'palekhovaCodeExamples') {
            return bot.sendPhoto(chatId, `./img/palekhova/codeExamples/${data}.jpg`)
        }
        if (data.slice(0, -2) === 'rakovaQuestions') {
            await bot.sendPhoto(chatId, `./img/rakova/${data}.jpg`)
            if (data === 'rakovaQuestions43') {
                return bot.sendPhoto(chatId, `./img/rakova/${data}Dop.jpg`);
            }
            if (data === 'rakovaQuestions46') {
                return bot.sendPhoto(chatId, `./img/rakova/${data}Dop.jpg`);
            }
            if (data === 'rakovaQuestions53') {
                return bot.sendPhoto(chatId, `./img/rakova/${data}Dop.jpg`);
            }
            return;
        }
    })
}

start()
